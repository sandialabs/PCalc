#================================================================
#
# Property file for application PCalc v. 2.0
#
#================================================================
workDir=./pCalc/Users_Manual/Examples/Example01/
application=predictions
#================================================================
#
# PREDICTORS, MODELS, UNCERTAINTY, ETC.
#
#================================================================
# predictors may include any combination of (tauptoolkit, bender, slbm)
predictors=bender
#taupoolkitModel = ak135
#tauptoolkitUncertaintyType = DistanceDependent 
#tauptoolkitUncertaintyDirectory = <property:seismicBaseData>
#tauptoolkitUncertaintyModel = ak135
#tauptoolkitEllipticityCorrectionsDirectory = <property:seismicBaseData>/el/ak135
benderModel=<property:workDir>SALSA3D_PUBLIC.geotess
#benderUncertaintyType = DistanceDependent 
#benderUncertaintyDirectory = ./models/uncertainty_models
#benderUncertaintyModel = salsa3d_2010_10_28
#benderEllipticityCorrectionsDirectory =<property:seismicBaseData>/el/ak135
#topographyModel = ./models/topography/topo_002000.bin
#================================================================
#
# INPUT PARAMETERS: GENERAL
#
#================================================================
#inputType must be one of [file | greatcircle | grid]
inputType=grid
#================================================================
#
# INPUT PARAMETERS: GRID
#
#================================================================
# phase, and lat, lon, elev of station are required
phase=P
site=10, 180, .2
# station name and jdate of the 'arrivals' are optional but if specified 
# then bender will use the information to include tt_site_correction
sta=XYZ
jdate=2011001
# gridRangeLat specifies lat1, lat2, number of points
# gridRangeLon specifies lon1, lon2, number of points
gridRangeLat=20 40 2
gridRangeLon=70 100 2
# if grid_range is not specified, then a grid centered on 
# grid_center is generated by angular rotation
# about a pole defined by property gridPole.
# gridCenter = 45 0
# if gridPole = northPole, a regular lat-lon grid is generated
#    with nodes evenly distributed along small circles of constant
#    latitude and meridians of constant longitude
# if gridPole = 90DegreesNorth (the default) then grid is
#    arranged so as to look more rectangular if viewed with an
#    azimuthal map projection centered on the site
# if gridPole = lat lon then pole of rotation for grid generation
#    is set to the specified lat,lon
# gridPole = northPole
# if grid generation is using the gridPole method, 
# then gridHeight must be specified 
# (height in degrees and number of points)
# gridHeight = 20 11
# if grid generation is using the gridPole method, 
# then gridWidth must be specified 
# (width in degrees and number of points)
# gridWidth = 10 6
# output position parameters.
# any subset of [longitude, latitude, depth]
# gridPositionParameters = longitude, latitude, depth
#================================================================
#
# INPUT PARAMETERS: DEPTHS
#
#================================================================
# all depths are specified in km.  The various methods of specifying 
# depth are searched until one is found that is valid.  
# Search order is depths, depthRange, depthLevels, maxDepthSpacing.
depthSpecificationMethod=depthLevels
# the depth of all grid points will be set to value specified by 
# depths = comma or space delineated list of depths
#depths = 50 60 70
# the depth of all grid points will be set the range of values specified
# with depthRange = depth1, depth2, nDepths
#depthRange = 55 75 3
# specify depth above/below an interface or top/bottom of a layer.
# Examples:
# depthLevels = above <interface name>
# depthLevels = below <interface name>
depthLevels=top of MOHO
# depthLevels = bottom of <layer name>
# depths = 100.0, 200.0
# specify that there should be a depth at the top and bottom of each
# layer and additional depths in the interior of each layer such that
# the maximum spacing of depths is no greater than maxDepthSpacing.
#maxDepthSpacing = 100
# if maxDepthSpacing was specified, then maxDepth can also be used to 
# specify some maximum depth for the bottom of the grid.  
# Default value is center of the earth.
#maxDepth = 700
#================================================================
#
# OUTPUT PARAMETERS
#
#================================================================
outputType=file
# if outputFile is specified then output is written to the specified file
# otherwise, output is written to stdout
outputFile=<property:workDir>pcalc_predictions_grid_output.dat
#optional log files
logFile=<property:workDir>pcalc_log.txt
# if terminalOutput is true then log information is written to stdout
# otherwise application is silent
terminalOutput=true
# if outputHeader is true then a header describing each column is output 
# to the top of the output file. 
outputHeader=true
# character to use to as field separator in the output file
# options are tab, space, comma
separator=space
# the following list of ouput attributes will be computed
# and appended to the end of each input record.  
outputAttributes=travel_time
# List of available outputAttributes. If a predictor does not support a 
# specified outputAttribute, -999999.0 will be output.
#
# travel_time
# tt_model_uncertainty
# tt_site_correction
# tt_ellipticity_correction
# dtt_dlat
# dtt_dlon
# dtt_dr
# slowness
# slowness_degrees
# slowness_model_uncertainty
# slowness_model_uncertainty_degrees
# dsh_dlat
# dsh_dlon
# dsh_dr
# azimuth
# azimuth_degrees
# azimuth_model_uncertainty
# azimuth_model_uncertainty_degrees
# daz_dlat
# daz_dlon
# daz_dr
# backazimuth
# backazimuth_degrees
# turning_depth
# out_of_plane
# distance
# distance_degrees
# average_ray_velocity
# tt_elevation_correction
# tt_elevation_correction_source
# tt_ellipticity_correction
# calculation_time

